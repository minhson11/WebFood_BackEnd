@model MonAn
@{
    ViewData["Title"] = Model.Ten;
}

<div class="container py-5">
    <div class="row">
        <!-- Food Image -->
        <div class="col-lg-6 mb-4">
            <div class="food-detail-image">
                @if (!string.IsNullOrEmpty(Model.HinhAnh))
                {
                    <img src="@Url.Content("~/images/" + Model.HinhAnh)" alt="@Model.Ten" class="img-fluid rounded">
                }
                else
                {
                    <div class="food-detail-placeholder">
                        <i class="fas fa-utensils"></i>
                        <p>Không có hình ảnh</p>
                    </div>
                }
            </div>
        </div>
        
        <!-- Food Information -->
        <div class="col-lg-6">
            <div class="food-detail-content">
                <h1 class="food-detail-title">@Model.Ten</h1>
                
                @if (!string.IsNullOrEmpty(Model.DanhMuc))
                {
                    <div class="food-category">
                        <span class="badge bg-primary">@Model.DanhMuc</span>
                    </div>
                }
                
                <div class="food-price-large">
                    @Model.Gia.ToString("N0") VNĐ
                </div>
                
                @if (!string.IsNullOrEmpty(Model.MoTa))
                {
                    <div class="food-description">
                        <h5>Mô tả</h5>
                        <p>@Model.MoTa</p>
                    </div>
                }
                
                <!-- Order Form -->
                <div class="order-form">
                    <form asp-controller="GioHang" asp-action="ThemVaoGioHang" method="post">
                        <input type="hidden" name="monAnId" value="@Model.Id" />
                        <h5>Đặt món</h5>
                        <div class="quantity-selector mb-3">
                            <label for="quantity">Số lượng:</label>
                            <input type="number" id="quantity" name="soLuong" value="1" min="1" class="form-control quantity-input" style="width:100px;display:inline-block;" />
                        </div>
                        <div class="total-price mb-3">
                            <strong>Đơn giá: @Model.Gia.ToString("N0") VNĐ</strong>
                        </div>
                        <div class="action-buttons">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-shopping-cart me-2"></i>Thêm vào giỏ hàng
                            </button>
                            <a href="@Url.Action("Index", "MonAn")" class="btn btn-outline-secondary btn-lg">
                                <i class="fas fa-arrow-left me-2"></i>Quay lại
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
let currentPrice = @Model.Gia;
let currentQuantity = 1;

function changeQuantity(delta) {
    const quantityInput = document.getElementById('quantity');
    let newQuantity = parseInt(quantityInput.value) + delta;
    
    if (newQuantity < 1) newQuantity = 1;
    
    quantityInput.value = newQuantity;
    currentQuantity = newQuantity;
    updateTotalPrice();
}

function updateTotalPrice() {
    const total = currentPrice * currentQuantity;
    document.getElementById('totalPrice').textContent = total.toLocaleString('vi-VN');
}

function addToCart() {
    const quantity = parseInt(document.getElementById('quantity').value);
    const foodId = @Model.Id;
    
    fetch('/GioHang/ThemVaoGioHang', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
        },
        body: JSON.stringify({ monAnId: foodId, soLuong: quantity })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            updateCartCount(data.cartCount);
            showNotification(data.message, 'success');
        } else {
            showNotification(data.message, 'error');
        }
    })
    .catch(error => {
        showNotification('Có lỗi xảy ra khi thêm vào giỏ hàng.', 'error');
    });
}

function updateCartCount(count) {
    const badge = document.getElementById('cart-count');
    if (badge) {
        badge.textContent = count;
        badge.style.display = count > 0 ? 'inline-block' : 'none';
    }
}

function showNotification(message, type) {
    // Đơn giản: alert, có thể thay bằng toast đẹp hơn
    alert(message);
}

// Update total price when quantity changes
document.getElementById('quantity').addEventListener('input', function() {
    currentQuantity = parseInt(this.value) || 1;
    updateTotalPrice();
});
</script> 